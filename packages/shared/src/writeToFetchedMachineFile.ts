import { existsSync } from 'fs';
import * as fs from 'fs/promises';
import * as path from 'path';
import * as prettier from 'prettier';
import { SkyConfig } from './skyTypes';

const getPathToSave = (filePath: string) =>
  filePath.slice(0, -path.extname(filePath).length) + '.sky.ts';

export const doesSkyConfigExist = (filePath: string) => {
  const pathToSave = getPathToSave(filePath);
  return existsSync(pathToSave);
};

export const writeSkyConfig = async (opts: {
  filePath: string;
  skyConfig: SkyConfig;
}) => {
  const { filePath, skyConfig } = opts;
  const prettierConfig = await prettier.resolveConfig(filePath);
  const pathToSave = getPathToSave(filePath);

  const machineFile = `// This file was generated by the XState CLI, please do not edit it manually.
${skyConfig.prettyConfigString};

export const skyConfig = { actorId:'${skyConfig.actor.id}', machine };`;

  await fs.writeFile(
    pathToSave,
    prettier.format(machineFile, {
      ...prettierConfig,
      parser: 'typescript',
    }),
  );
};
